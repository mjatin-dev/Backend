{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "LoveU APIs",
    "description": "LoveU APIs",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "3.131.180.250:8000",
  "host1": "localhost:8000",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "APIs",
      "description": "APIs"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/check_email": {
      "post": {
        "description": "Check Email Address",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "Check Email Address",
            "schema": {
              "$ref": "#/definitions/check_email"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Check Email Address"
          }
        }
      }
    },
    "/standard_signup": {
      "post": {
        "description": "User Stand Signup",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created"
          }
        }
      }
    },
    "/standard_login": {
      "post": {
        "description": "User Stand Signup",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/standard_login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login Successfully"
          }
        }
      }
    },
    "/social_signup": {
      "post": {
        "description": "Social Signup,Case 1:- To check the user already exist or not just send te *Social Id(social_id) if exists you will get status code 400*.Case 2:-If users not exists send all the required params i.e( name, email, password, gender, about_me, your_status, device_type, device_token, social_id)",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Social Signup,Case 1:- To check the user already exist or not just send te *Social Id(social_id) if exists you will get status code 400*.Case 2:-If users not exists send all the required params i.e( name, email, password, gender, about_me, your_status, device_type, device_token, social_id)",
            "schema": {
              "$ref": "#/definitions/social_signup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Login Successfully"
          }
        }
      }
    },
    "/update_location": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_location"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/update_password": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_password"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/update_notification": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token) and send parameter notification on('notification_on')..in this 1 means on 0 means off",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_notification"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/update_user": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token).case 1 - If you want to change the radius,interest and age in this send step 1 and their respective paramters.case 2 - If you want to change the name,status and images just send these respective parameter with step 2",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/update_user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/like_user": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/like_user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/dislike_user": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/like_user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/block_user": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/like_user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/report_user": {
      "post": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/report_user"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Update Successfully"
          }
        }
      }
    },
    "/get_questions": {
      "get": {
        "description": "In this send authorization token follow with Bearer i.e (Bearer token)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "required": true,
            "description": "In this send authorization token follow with Bearer i.e (Bearer token)"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "question list"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": [
        "name",
        "email",
        "password",
        "gender",
        "date_of_birth",
        "your_status",
        "about_me",
        "device_type",
        "device_token"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "your_status": {
          "type": "string"
        },
        "about_me": {
          "type": "string"
        },
        "device_type": {
          "type": "string"
        },
        "device_token": {
          "type": "string"
        }
      }
    },
    "check_email": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "standard_login": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "social_signup": {
      "required": [
        "name",
        "email",
        "password",
        "gender",
        "date_of_birth",
        "your_status",
        "about_me",
        "device_type",
        "device_token",
        "social_id"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string"
        },
        "your_status": {
          "type": "string"
        },
        "about_me": {
          "type": "string"
        },
        "device_type": {
          "type": "string"
        },
        "device_token": {
          "type": "string"
        },
        "social_id": {
          "type": "string"
        }
      }
    },
    "update_location": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        }
      }
    },
    "update_password": {
      "required": [
        "new_password"
      ],
      "properties": {
        "new_password": {
          "type": "string"
        }
      }
    },
    "update_notification": {
      "required": [
        "notification_on"
      ],
      "properties": {
        "notification_on": {
          "type": "number"
        }
      }
    },
    "update_user": {
      "properties": {
        "step": {
          "type": "number"
        },
        "age_range": {
          "typ": "object",
          "properties": {
            "max": {
              "type": "number"
            },
            "min": {
              "type": "number"
            }
          }
        },
        "insterted_in": {
          "type": "string"
        },
        "radius_range": {
          "typ": "object",
          "properties": {
            "max": {
              "type": "number"
            },
            "min": {
              "type": "number"
            }
          }
        },
        "name": {
          "type": "string"
        },
        "your_status": {
          "type": "string"
        },
        "about_me": {
          "type": "string"
        },
        "images": {
          "type": "string"
        },
        "profile_image":{
          "type":"string"
        }
      }
    },
    "like_user": {
      "required": [
        "member_id"
      ],
      "properties": {
        "member_id": {
          "type": "string"
        }
      }
    },
    "report_user": {
      "required": [
        "reported_by_user_id",
        "reason"
      ],
      "properties": {
        "reported_by_user_id": {
          "type": "string"
        },
        "reason:": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}