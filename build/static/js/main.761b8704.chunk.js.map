{"version":3,"sources":["pages/dashboard/Users.js","config/axios.js","config/config.js","pages/dashboard/AddQuestions.js","routes.js","Core.js","redux/UserReducers/actions.js","redux/UserReducers/reducers.js","redux/redux.js","logo.jpeg","redux/UserReducers/actionCreator.js","pages/Signup.js","pages/ForgetPassword.js","pages/Login.js","ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["createData","name","calories","fat","carbs","protein","rows","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","paper","textAlign","color","palette","text","secondary","cell","fontSize","connect","state","user_detail","withRouter","props","classes","console","log","className","Grid","container","item","xs","TableContainer","component","Paper","style","background","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","scope","cookie","Cookies","axiosInstance","axios","create","baseURL","defaults","headers","common","get","input","marginBottom","formControl","width","paddingLeft","AddQuestions","routers","Users","path","icon","useState","question","setQuestion","option_type","option_title","inputList","setInputList","type","formRef","useRef","handleAddClick","handleInputChange","e","index","target","value","list","Card","CardHeader","title","subheader","ref","onSubmit","preventDefault","post","option_list","then","data","status","toast","catch","err","onError","errors","CardContent","label","fullWidth","variant","onChange","validators","errorMessages","x","i","FormControl","InputLabel","id","Select","labelId","MenuItem","length","AddCircleOutline","marginTop","cursor","onClick","RemoveCircleOutline","splice","handleRemoveClick","CardActions","Button","size","drawerWidth","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","listroot","backgroundColor","inline","textDecoration","titleAnchor","grow","breakpoints","up","position","borderRadius","shape","fade","white","height","pointerEvents","useRouteMatch","history","useHistory","useTheme","React","open","setOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","push","mobileMenuId","renderMobileMenu","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","sectionDesktop","aria-controls","aria-haspopup","event","currentTarget","sectionMobile","Drawer","anchor","List","ListItem","button","Icon","to","ListItemText","primary","route","exact","isAuth","USER_LIST","IS_LOADING","IS_SUCCESS","USER_DETAIL","IS_AUTH","intial","loading","user_list","is_success","is_auth","middlewares","thunk","store","createStore","action","payload","applyMiddleware","justify","rootContainer","left","right","top","bottom","margin","dispatch","signup","redirect","gender","date_of_birth","your_status","device_token","device_type","result","userSignup","email","password","business","signupPayload","setSignupPayload","handleChange","handleSubmit","a","FormGroup","FormControlLabel","control","Checkbox","handler","ForgetPassword","setEmail","isLoading","isSuccess","user_login","message","set","token","error","userLogin","loginPayload","setLoginPayload","isLogin","setIsLogin","setType","useEffect","direction","src","Logo","ProtectedRoutes","Component","rest","render","pathname","from","location","App","Login","ProtectedRoute","Core","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761b8704.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n\r\n    },\r\n    cell: {\r\n        color: \"white\",\r\n        fontSize:\"15px\"\r\n    }\r\n}));\r\n\r\nfunction Users(props) {\r\n    const classes = useStyles();\r\n    console.log(props.user_detail)\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <TableContainer component={Paper} style={{ background: \"#fdac5d\" }}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.cell}>Dessert (100g serving)</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.cell}>Calories</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.cell}>Fat&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.cell}>Carbs&nbsp;(g)</TableCell>\r\n                                    <TableCell align=\"right\" className={classes.cell}>Protein&nbsp;(g)</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody style={{ color: \"white\" }}>\r\n                                {rows.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\" className={classes.cell}>\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\" className={classes.cell}>{row.calories}</TableCell>\r\n                                        <TableCell align=\"right\" className={classes.cell}>{row.fat}</TableCell>\r\n                                        <TableCell align=\"right\" className={classes.cell}>{row.carbs}</TableCell>\r\n                                        <TableCell align=\"right\" className={classes.cell}>{row.protein}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user_detail: state.user_detail\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Users));","import { BASE_URL } from \"./config\";\r\nimport axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nconst cookie = new Cookies();\r\nconst axiosInstance = axios.create({\r\n  baseURL: `${BASE_URL}`,\r\n  //timeout: 1000,\r\n});\r\n\r\naxiosInstance.defaults.headers.common['authorization'] = cookie.get('token') || \"\";\r\n\r\nexport { axiosInstance }; ","//export const BASE_URL = \"http://localhost:8000/admin\";\r\nexport const BASE_URL = \"http://3.131.180.250:8000/admin\";","import React, { useState, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Card, CardActions, CardContent, CardHeader, FormControl, InputLabel, MenuItem, Paper, Select, Typography } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { AddCircleOutline, Remove, RemoveCircleOutline } from '@material-ui/icons';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        //margin:theme.spacing(2)\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n        paddingLeft: \"10px\",\r\n        // margin:theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction AddQuestions(props) {\r\n    const classes = useStyles();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [inputList, setInputList] = useState([{ option_type: \"\", option_title: \"\" }]);\r\n\r\n    const [type, setType] = useState([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\",\r\n        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]);\r\n\r\n    const formRef = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axiosInstance.post('/add-questions', { question: question, option_list: inputList }).then((data) => {\r\n            let { status } = data;\r\n            if (status === 200) {\r\n                toast(\"Question add successfully\", { type: \"success\" });\r\n                setQuestion(\"\");\r\n                setInputList([{ option_type: \"\", option_title: \"\" }]);\r\n            }\r\n        }).catch(err => console.log(err));\r\n\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { option_type: \"\", option_title: \"\" }]);\r\n    };\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n                        <CardHeader title=\"Add Questions\" subheader=\"All fields is mandatory\">\r\n                        </CardHeader>\r\n                        <ValidatorForm\r\n                            ref={formRef}\r\n                            onSubmit={handleSubmit}\r\n                            onError={errors => console.log(errors)}\r\n                        >\r\n                            <CardContent>\r\n                                <Grid container>\r\n                                    <Grid xs={12}>\r\n                                        <TextValidator\r\n                                            label=\"Question\"\r\n                                            fullWidth\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            onChange={e => setQuestion(e.target.value)}\r\n                                            type=\"text\"\r\n                                            value={question}\r\n                                            validators={['required']}\r\n                                            errorMessages={['Question field is required']}\r\n                                        />\r\n                                    </Grid>\r\n                                    {inputList.map((x, i) => {\r\n                                        return (\r\n                                            <>\r\n                                                <Grid item xs=\"3\">\r\n                                                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                        <InputLabel id=\"option_type\">Option Type</InputLabel>\r\n                                                        <Select id=\"option_type\"\r\n                                                            labelId=\"option_type\"\r\n                                                            value={x.option_type}\r\n                                                            name=\"option_type\"\r\n                                                            onChange={e => handleInputChange(e, i)}>\r\n                                                            {type.map(data => <MenuItem value={data}>{data}</MenuItem>)}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs=\"8\" style={{ paddingLeft: \"10px\" }}>\r\n                                                    <TextValidator\r\n                                                        label=\"Option Title\"\r\n                                                        className={classes.input}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        name=\"option_title\"\r\n                                                        value={x.option_title}\r\n                                                        validators={['required']}\r\n                                                        errorMessages={['Option Title field is required']}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={1} style={{ paddingLeft: \"8px\" }}>\r\n                                                    {inputList.length - 1 === i && <AddCircleOutline style={{ fontSize: \"30px\", marginTop: \"5px\", color: \"Blue\", cursor: \"pointer\" }} onClick={handleAddClick}></AddCircleOutline>}\r\n                                                    {inputList.length !== 1 && <RemoveCircleOutline style={{ fontSize: \"30px\", color: \"Red\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => handleRemoveClick(i)}></RemoveCircleOutline>}\r\n                                                </Grid>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n\r\n\r\n                                </Grid>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button type=\"submit\" color=\"secondary\" size=\"large\" variant=\"contained\">Submit</Button>\r\n                            </CardActions>\r\n                        </ValidatorForm>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AddQuestions;","import Users from \"./pages/dashboard/Users\";\r\nimport AddQuestions from \"./pages/dashboard/AddQuestions\";\r\n\r\nexport const routers = [\r\n    {\r\n        component: Users,\r\n        path: \"/dashboard\",\r\n        name:\"Users\",\r\n        icon:\"supervised_user_circle\"\r\n    },\r\n    {\r\n        component: AddQuestions,\r\n        path: \"/dashboard/add-questions\",\r\n        name:\"Questions\",\r\n        icon:\"question_answer\"\r\n    }\r\n]\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\n\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport Users from './pages/dashboard/Users';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Switch,\r\n    useRouteMatch,\r\n    useHistory\r\n} from 'react-router-dom';\r\nimport { routers } from \"./routes\";\r\nimport { Icon } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        background: '#f3698e'\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    listroot: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: \"10px\"\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    title: {\r\n        paddingLeft: \"20px\",\r\n        textDecoration: \"none\"\r\n    },\r\n    titleAnchor: {\r\n        textDecoration: \"none\"\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n        fontWeight: 'bold',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n        marginRight: \"100px\"\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Core = (props) => {\r\n    const url = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const logout = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={logout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n\r\n        </Menu>\r\n    );\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ background: \"#f3698e\" }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        LOVEU\r\n          </Typography>\r\n\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Typography style={{ marginTop: \"12px\" }}>Hi,{props.user_detail.name}</Typography>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <List>\r\n                    {routers.map((text, index) => (\r\n                        <ListItem button key={text.name}>\r\n                            <Icon style={{ color: \"white\" }}>{text.icon}</Icon>\r\n                            <Link to={text.path} style={{ textDecoration: 'none', color: \"white\", marginLeft: \"10px\" }}><ListItemText primary={text.name} /></Link>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {/* Import Components */}\r\n                {\r\n                    routers.map(route => <Route exact isAuth='true' path={route.path} component={route.component} />)\r\n                }\r\n\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user_detail: state.user_detail\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Core);","export const USER_LIST = \"USER_LIST\";\r\nexport const SET_LIST = \"SET_LIST\";\r\nexport const GET_LIST = \"GET_LIST\";\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const IS_SUCCESS = \"IS_SUCCESS\";\r\nexport const USER_DETAIL = \"USER_DETAIL\";\r\nexport const IS_AUTH = \"IS_AUTH\";","import { IS_LOADING, USER_LIST, USER_DETAIL, IS_SUCCESS, IS_AUTH } from \"./actions\";\r\nconst intial = {\r\n    loading: false,\r\n    user_list: [],\r\n    is_success: false,\r\n    user_detail: {},\r\n    is_auth: false\r\n}\r\n\r\nexport default (state = intial, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST:\r\n            return { ...state, user_list: action.payload };\r\n        case USER_DETAIL:\r\n            return { ...state, user_detail: action.payload };\r\n        case IS_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case IS_SUCCESS:\r\n            return { ...state, is_success: action.payload };\r\n        case IS_AUTH:\r\n            return { ...state, is_auth: true }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport UserReducer from \"../redux/UserReducers/reducers\";\r\nimport thunk from 'redux-thunk';\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(UserReducer, applyMiddleware(...middlewares));\r\nexport default store;","export default __webpack_public_path__ + \"static/media/logo.3e8db16f.jpeg\";","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nimport { axiosInstance } from \"../../config/axios\";\r\nimport { IS_LOADING, USER_LIST, IS_SUCCESS, USER_DETAIL, IS_AUTH } from \"../UserReducers/actions\";\r\nconst cookie = new Cookies();\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch({ type: IS_LOADING, payload: true });\r\n\r\n        axiosInstance.get(`getUser`)\r\n            .then(result => {\r\n                let { data } = result;\r\n                if (data.message === true) {\r\n                    dispatch({ type: IS_SUCCESS, payload: true });\r\n                    dispatch({ type: USER_LIST, payload: data.data });\r\n                    dispatch({ type: IS_LOADING, payload: false });\r\n                }\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const userLogin = (payload, history) => {\r\n    console.log(payload)\r\n    return dispatch => {\r\n        axiosInstance.post(`login`, payload)\r\n            .then(result => {\r\n                let { status, data, message } = result.data;\r\n                if (status === 200) {\r\n                    dispatch({ type: USER_DETAIL, payload: data[0] });\r\n                    cookie.set('token', data[0].token);\r\n                    history.push('/dashboard');\r\n                }\r\n                else {\r\n                    toast(message, { type: 'error' });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: IS_LOADING, payload: false });\r\n                toast(\"Invalid Credentials\", { type: 'error' });\r\n            })\r\n    }\r\n}\r\n\r\nexport const userSignup = (payload, history) => {\r\n    return dispatch => {\r\n        payload.gender = \"Male\";\r\n        payload.date_of_birth = \"10/20/1996\";\r\n        payload.your_status = \"test\";\r\n        payload.device_token = \"\";\r\n        payload.device_type = \"\";\r\n        axiosInstance.post(`standard_signup`, payload).then(result => {\r\n            let { data, status } = result.data;\r\n            console.log(data);\r\n            if (status === 200) {\r\n                dispatch({ type: IS_SUCCESS, payload: true });\r\n                dispatch({ type: USER_DETAIL, payload: data[0] });\r\n                dispatch({ type: IS_AUTH, payload: true })\r\n                history.push('/dashboard')\r\n            }\r\n            else {\r\n                dispatch({ type: IS_SUCCESS, payload: false });\r\n            }\r\n\r\n        }).catch(err => {\r\n            dispatch({ type: IS_SUCCESS, payload: false });\r\n        })\r\n    }\r\n\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { userSignup } from \"../redux/UserReducers/actionCreator\"\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { USER_DETAIL } from '../redux/UserReducers/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction Signup(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [signupPayload, setSignupPayload] = useState({ name: \"\", email: \"\", password: \"\", business: \"\" })\r\n    const handleChange = e => setSignupPayload({ ...signupPayload, [e.target.name]: e.target.value });\r\n    const formRef = useRef(null);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        props.signup(signupPayload, history);\r\n        console.log(props.is_success);\r\n        //props.is_success && history.push('/dashboard');\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                onSubmit={handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n                <TextValidator\r\n                    label=\"Full Name\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    name=\"name\"\r\n                    value={signupPayload.name}\r\n                    validators={['required']}\r\n                    errorMessages={['Name field is required']}\r\n                />\r\n\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={signupPayload.email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['Email field is required', 'email is not valid']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Password\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    value={signupPayload.password}\r\n                    validators={['required']}\r\n                    errorMessages={['Password field is required']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Business Name\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"business\"\r\n                    value={signupPayload.business}\r\n                    validators={['required']}\r\n                    errorMessages={['Business field is required']}\r\n                />\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Checkbox name=\"checkedA\" />}\r\n                        label=\"I agree the terms & conditions\"\r\n                    />\r\n                </FormGroup>\r\n                <Grid justify=\"center\" alignItems=\"center\" container justify=\"space-evenly\" style={{ marginTop: \"20px\" }}>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Sign Up</Button>\r\n                    <Button type=\"button\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.handler('login')}> Cancel</Button>\r\n\r\n                </Grid>\r\n            </ValidatorForm>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        is_success: state.is_success\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup: (payload, redirect) => dispatch(userSignup(payload, redirect))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction ForgetPassword(props) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const formRef = useRef(null);\r\n    const handleSubmit = () => {\r\n    };\r\n    return (\r\n        <Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                onSubmit={handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['Email field is required', 'email is not valid']}\r\n                />\r\n\r\n\r\n                <Grid  alignItems=\"center\" container justify=\"space-evenly\" style={{ marginTop: \"20px\" }}>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Request</Button>\r\n                    <Button type=\"button\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.handler('login')}>Cancel</Button>\r\n\r\n                </Grid>\r\n            </ValidatorForm>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ForgetPassword;","import React, { useEffect, useRef, useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Logo from \"../logo.jpeg\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Signup from \"./Signup\"\r\nimport ForgetPassword from './ForgetPassword';\r\nimport { userLogin } from '../redux/UserReducers/actionCreator';\r\nimport { connect } from 'react-redux';\r\nimport { SaveIcon } from '@material-ui/icons/Save';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [loginPayload, setLoginPayload] = useState({ email: \"\", password: \"\" });\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const [type, setType] = useState(\"login\");\r\n    const handleChange = e => setLoginPayload({ ...loginPayload, [e.target.name]: e.target.value });\r\n    const formRef = useRef(null);\r\n\r\n    useEffect(() => { }, [isLogin])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setIsLogin(false);\r\n        props.user_login(loginPayload, history);\r\n\r\n    };\r\n\r\n    const handler = value => setType(value);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2} className={classes.rootContainer}>\r\n                <Grid justify=\"center\" alignItems=\"center\" direction=\"column\" container>\r\n                    <img src={Logo} width=\"300px\" style={{ marginBottom: \"10px\", marginTop: \"20px\" }} />\r\n                    <Typography variant=\"h6\" >\r\n                        Sign In To Admin\r\n                    </Typography>\r\n                    <Typography>\r\n                        Enter your details to login to your account:\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                {type === 'login' ? (<Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n                    <ValidatorForm\r\n                        ref={formRef}\r\n                        onSubmit={handleSubmit}\r\n                        onError={errors => console.log(errors)}\r\n                    >\r\n                        <TextValidator\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            name=\"email\"\r\n                            value={loginPayload.email}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={['Email field is required', 'email is not valid']}\r\n                        />\r\n                        <TextValidator\r\n                            label=\"Password\"\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            value={loginPayload.password}\r\n                            validators={['required']}\r\n                            errorMessages={['Password field is required']}\r\n                            type=\"password\"\r\n                        />\r\n\r\n\r\n                        <Grid alignItems=\"center\" container justify=\"center\">\r\n                            <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Sign in</Button>\r\n                        </Grid>\r\n\r\n                    </ValidatorForm>\r\n\r\n                </Grid>\r\n                ) : type === 'forget' ? (<ForgetPassword handler={handler} />) : (<Signup handler={handler} />)}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.loading,\r\n        isSuccess: state.is_success\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        user_login: (payload, redirect) => dispatch(userLogin(payload, redirect))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction ProtectedRoutes({ isAuth: isAuth, component: Component, ...rest }) {\r\n    return (    \r\n        <Route {...rest} render={(props) => {\r\n            if (isAuth) { return <Component /> }\r\n            else { return <Redirect to={{ pathname: \"/\", state: { from: props.location } }} /> }\r\n        }} />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoutes;","import './App.css';\nimport { Provider } from \"react-redux\";\nimport Core from './Core';\nimport store from './redux/redux';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\nimport Login from './pages/Login';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Users from './pages/dashboard/Users';\nimport ProtectedRoutes from './ProtectedRoute';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ToastContainer />\n\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Login}></Route>\n          <ProtectedRoutes  path='/dashboard' component={Core} isAuth={true} />\n        \n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}