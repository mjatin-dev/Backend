{"version":3,"sources":["config/axios.js","config/config.js","components/table.js","pages/dashboard/Users.js","pages/dashboard/AddQuestions.js","redux/AdminReducers/actions.js","pages/dashboard/QuestionList.js","routes.js","redux/AdminReducers/actionCreator.js","Core.js","redux/UserReducers/actions.js","redux/UserReducers/reducers.js","redux/AdminReducers/reducers.js","redux/redux.js","logo.jpeg","redux/UserReducers/actionCreator.js","pages/Signup.js","pages/ForgetPassword.js","pages/Login.js","ProtectedRoute.js","App.js","reportWebVitals.js","index.js"],"names":["token","Cookies","get","axiosInstance","axios","create","baseURL","interceptors","request","use","config","headers","authorization","useStyles","makeStyles","theme","cell","color","fontSize","fontFamily","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","width","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","EnhancedTableHead","props","classes","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","style","background","TableRow","headCell","TableCell","align","sortDirection","className","TableSortLabel","active","direction","onClick","property","event","user_list","useState","React","setOrder","setOrderBy","selected","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","Table","length","TableBody","slice","row","i","SrNo","name","email","gender","about_me","_id","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","value","float","root","flexGrow","spacing","paper","textAlign","palette","text","secondary","connect","state","user_detail","withRouter","userList","setUserList","isLoading","setIsLoading","useEffect","getUserList","then","resp","data","status","catch","err","toast","type","Grid","container","justify","CircularProgress","item","xs","input","marginBottom","formControl","paddingLeft","AddQuestions","question","setQuestion","option_type","option_title","inputList","setInputList","history","useHistory","formRef","useRef","handleAddClick","handleInputChange","e","list","Card","CardHeader","title","subheader","ref","onSubmit","preventDefault","post","option_list","push","onError","errors","console","log","CardContent","fullWidth","variant","onChange","validators","errorMessages","x","FormControl","InputLabel","Select","labelId","MenuItem","AddCircleOutline","marginTop","cursor","RemoveCircleOutline","splice","handleRemoveClick","CardActions","Button","size","QUESTIONLIST","ISLOADING","flex","inline","display","nested","routers","Users","path","icon","adminDetail","admin","dispatch","getQuestions","payload","result","question_list","reverse","message","List","ListItem","alignItems","ListItemText","primary","options","option","Typography","Divider","drawerWidth","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","content","contentShift","listroot","backgroundColor","textDecoration","titleAnchor","grow","breakpoints","up","borderRadius","shape","fade","common","white","pointerEvents","user","useRouteMatch","useTheme","open","setOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","mobileMenuId","renderMobileMenu","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","edge","noWrap","sectionDesktop","aria-controls","aria-haspopup","currentTarget","sectionMobile","Drawer","anchor","activeClassName","to","button","Icon","route","exact","isAuth","USER_LIST","IS_LOADING","IS_SUCCESS","USER_DETAIL","IS_AUTH","intial","loading","is_success","is_auth","is_Loading","middlewares","thunk","persistConfig","key","storage","whitelist","reducers","action","rootReducer","combineReducers","store","createStore","persistReducer","applyMiddleware","persistor","persistStore","cookie","rootContainer","left","right","bottom","signup","redirect","date_of_birth","your_status","device_token","device_type","userSignup","password","business","signupPayload","setSignupPayload","handleChange","handleSubmit","FormGroup","FormControlLabel","control","Checkbox","handler","ForgetPassword","setEmail","isSuccess","user_login","localStorage","setItem","set","defaults","error","userLogin","loginPayload","setLoginPayload","isLogin","setIsLogin","setType","src","Logo","ProtectedRoutes","Component","rest","render","pathname","from","location","App","Login","ProtectedRoute","Core","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.599f48ba.chunk.js","sourcesContent":["import { BASE_URL } from \"./config\";\r\nimport axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\n\r\nconst cookie = new Cookies();\r\nconst token = cookie.get('token');\r\nconst axiosInstance = axios.create({\r\n  baseURL: `${BASE_URL}`\r\n  //timeout: 1000,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(config => {\r\n  if (token) {\r\n    config.headers.authorization = token\r\n  }\r\n  return config;\r\n})\r\nexport { axiosInstance };","//export const BASE_URL = \"http://localhost:8000/admin\";\r\nexport const BASE_URL = \"http://3.142.32.45:8000/admin\"; ","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { TableSortLabel } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cell: {\r\n        color: \"white\",\r\n        fontSize: \"16px\",\r\n        fontFamily: \"auto\"\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    }\r\n}));\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n    { id: 'srno', numeric: \"true\", label: 'SrNo' },\r\n    { id: 'name', label: 'Name' },\r\n    { id: 'email', label: 'Email' },\r\n    { id: 'gender', label: 'Gender' },\r\n    { id: 'about_me', label: 'About' },\r\n];\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead style={{ background: \"#f3698e\" }}>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align='center'\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                        className={classes.cell}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default ({ user_list }) => {\r\n    const classes = useStyles();\r\n    const [userList, setUserList] = useState([]);\r\n    const [order, setOrder] = React.useState('desc');\r\n    const [orderBy, setOrderBy] = React.useState('name');\r\n    const [selected, setSelected] = React.useState([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n  \r\n\r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    return (\r\n        <TableContainer component={Paper} style={{ background: \"#fdac5d\" }}>\r\n            <Table>\r\n                <EnhancedTableHead\r\n                    classes={classes}\r\n                    numSelected={selected.length}\r\n                    order={order}\r\n                    orderBy={orderBy}\r\n                    onRequestSort={handleRequestSort}\r\n                    rowCount={user_list.length}\r\n                />\r\n                <TableBody style={{ color: \"white\" }}>\r\n                    {stableSort(user_list, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, i) => {\r\n                            row.SrNo = i + 1;\r\n                            return (<TableRow key={row._id}>\r\n                                <TableCell align=\"center\" className={classes.cell}>{row.SrNo}</TableCell>\r\n                                <TableCell align=\"center\" className={classes.cell}>{row.name}</TableCell>\r\n                                <TableCell align=\"center\" className={classes.cell}>{row.email}</TableCell>\r\n                                <TableCell align=\"center\" className={classes.cell}>{row.gender}</TableCell>\r\n                                <TableCell align=\"center\" className={classes.cell}>{row.about_me}</TableCell>\r\n                            </TableRow>)\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={user_list.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                style={{ float: 'left' }}\r\n            />\r\n        </TableContainer>\r\n    );\r\n}\r\n      ","import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { toast } from 'react-toastify';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Table from \"../../components/table\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction Users(props) {\r\n    const classes = useStyles();\r\n    const [userList, setUserList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getUserList()\r\n    }, []);\r\n\r\n    const getUserList = () => {\r\n        setIsLoading(true);\r\n        axiosInstance.get('/get-list').then((resp) => {\r\n            let { status, data } = resp.data;\r\n            if (status === 200) {\r\n                setUserList(data);\r\n                setIsLoading(false);\r\n            }\r\n        }).catch(err => {\r\n            setIsLoading(false);\r\n            toast(\"Something went wrong\", { type: \"error\" })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                {!isLoading ? (<Grid item xs={12}>\r\n                    <Table user_list={userList} />\r\n                </Grid>) : (\r\n                    <Grid justify=\"center\">\r\n                        <CircularProgress />\r\n                    </Grid>)}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user_detail: state.user_detail\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Users));","import React, { useState, useRef } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Card, CardActions, CardContent, CardHeader, FormControl, InputLabel, MenuItem, Paper, Select, Typography } from '@material-ui/core';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport { AddCircleOutline, Remove, RemoveCircleOutline } from '@material-ui/icons';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        //margin:theme.spacing(2)\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n        paddingLeft: \"10px\",\r\n        // margin:theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction AddQuestions(props) {\r\n    const classes = useStyles();\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [inputList, setInputList] = useState([{ option_type: \"\", option_title: \"\" }]);\r\n    const history = useHistory();\r\n\r\n\r\n    const [type, setType] = useState([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\",\r\n        \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]);\r\n\r\n    const formRef = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axiosInstance.post('/add-questions', { question: question, option_list: inputList }).then((data) => {\r\n            let { status } = data;\r\n            if (status === 200) {\r\n                toast(\"Question add successfully\", { type: \"success\" });\r\n                setQuestion(\"\");\r\n                setInputList([{ option_type: \"\", option_title: \"\" }]);\r\n                history.push('/dashboard/questions')\r\n            }\r\n        }).catch(err => toast(\"Something went wrong\", { type: \"error\" }));\r\n\r\n    };\r\n\r\n    // handle click event of the Remove button\r\n    const handleRemoveClick = index => {\r\n        const list = [...inputList];\r\n        list.splice(index, 1);\r\n        setInputList(list);\r\n    };\r\n\r\n    // handle click event of the Add button\r\n    const handleAddClick = () => {\r\n        setInputList([...inputList, { option_type: \"\", option_title: \"\" }]);\r\n    };\r\n\r\n    const handleInputChange = (e, index) => {\r\n        const { name, value } = e.target;\r\n        const list = [...inputList];\r\n        list[index][name] = value;\r\n        setInputList(list);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Card>\r\n\r\n\r\n                        <CardHeader title=\"Add Questions\" subheader=\"All fields is mandatory\">\r\n                        </CardHeader>\r\n                        <ValidatorForm\r\n                            ref={formRef}\r\n                            onSubmit={handleSubmit}\r\n                            onError={errors => console.log(errors)}\r\n                        >\r\n                            <CardContent>\r\n                                <Grid container>\r\n                                    <Grid xs={12}>\r\n                                        <TextValidator\r\n                                            label=\"Question\"\r\n                                            fullWidth\r\n                                            className={classes.input}\r\n                                            variant=\"outlined\"\r\n                                            onChange={e => setQuestion(e.target.value)}\r\n                                            type=\"text\"\r\n                                            value={question}\r\n                                            validators={['required']}\r\n                                            errorMessages={['Question field is required']}\r\n                                        />\r\n                                    </Grid>\r\n                                    {inputList.map((x, i) => {\r\n                                        return (\r\n                                            <>\r\n                                                <Grid item xs=\"3\">\r\n                                                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                                        <InputLabel id=\"option_type\">Option Type</InputLabel>\r\n                                                        <Select id=\"option_type\"\r\n                                                            labelId=\"option_type\"\r\n                                                            value={x.option_type}\r\n                                                            name=\"option_type\"\r\n                                                            onChange={e => handleInputChange(e, i)}>\r\n                                                            {type.map(data => <MenuItem value={data}>{data}</MenuItem>)}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs=\"8\" style={{ paddingLeft: \"10px\" }}>\r\n                                                    <TextValidator\r\n                                                        label=\"Option Title\"\r\n                                                        className={classes.input}\r\n                                                        variant=\"outlined\"\r\n                                                        fullWidth\r\n                                                        name=\"option_title\"\r\n                                                        value={x.option_title}\r\n                                                        validators={['required']}\r\n                                                        errorMessages={['Option Title field is required']}\r\n                                                        onChange={e => handleInputChange(e, i)}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={1} style={{ paddingLeft: \"8px\" }}>\r\n                                                    {inputList.length - 1 === i && <AddCircleOutline style={{ fontSize: \"30px\", marginTop: \"5px\", color: \"Blue\", cursor: \"pointer\" }} onClick={handleAddClick}></AddCircleOutline>}\r\n                                                    {inputList.length !== 1 && <RemoveCircleOutline style={{ fontSize: \"30px\", color: \"Red\", marginTop: \"5px\", cursor: \"pointer\" }} onClick={() => handleRemoveClick(i)}></RemoveCircleOutline>}\r\n                                                </Grid>\r\n                                            </>\r\n                                        )\r\n                                    })}\r\n\r\n\r\n                                </Grid>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button type=\"submit\" color=\"secondary\" size=\"large\" variant=\"contained\">Submit</Button>\r\n                            </CardActions>\r\n                        </ValidatorForm>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default AddQuestions;","export const QUESTIONLIST = \"QUESTIONLIST\";\r\nexport const ISLOADING = \"ISLOADING\";","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { axiosInstance } from '../../config/axios';\r\nimport { get_questions } from '../../redux/AdminReducers/actionCreator';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        flex: 1\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n        paddingLeft: theme.spacing(2)\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    }\r\n}));\r\n\r\n\r\nconst QuestionList = ({ adminDetail, getQuestions }) => {\r\n    const { question_list } = adminDetail;\r\n    console.log(question_list)\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [questionlist, setQuestionList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getQuestions();\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n  \r\n  return (\r\n        <Grid container spacing={2} className={classes.root}>\r\n            {isLoading ? ((\r\n                <Grid justify=\"center\">\r\n                    <CircularProgress />\r\n                </Grid>)) : (<Grid item xs={12}>\r\n\r\n                    <List>\r\n                        {\r\n                            question_list.map(item => {\r\n                                return (<><ListItem alignItems=\"flex-start\">\r\n                                    <ListItemText\r\n                                        primary={item.question}\r\n                                        secondary={\r\n                                            <>\r\n                                                {item.options.map(option => {\r\n                                                    return (<Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {option.option_type} : {option.option_title}<br />\r\n\r\n                                                    </Typography>)\r\n                                                })\r\n\r\n                                                }\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                    <Divider component=\"li\" /></>)\r\n                            })}\r\n                    </List>\r\n\r\n\r\n                </Grid>\r\n\r\n            )}\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        adminDetail: state.admin\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    console.log(dispatch)\r\n    return {\r\n        getQuestions: () => dispatch(get_questions())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionList);","import Users from \"./pages/dashboard/Users\";\r\nimport AddQuestions from \"./pages/dashboard/AddQuestions\";\r\nimport QuestionList from \"./pages/dashboard/QuestionList\";\r\n\r\nexport const routers = [\r\n    {\r\n        component: Users,\r\n        path: \"/dashboard\",\r\n        name:\"Users\",\r\n        icon:\"supervised_user_circle\"\r\n    },\r\n    {\r\n        component: AddQuestions,\r\n        path: \"/dashboard/add-questions\",\r\n        name:\"Add Questions\",\r\n        icon:\"question_answer\"\r\n    },\r\n    {\r\n        component:QuestionList,\r\n        path:\"/dashboard/questions\",\r\n        name:\"Questions\",\r\n        icon:\"list\"\r\n    }\r\n]\r\n\r\n","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nimport { axiosInstance } from \"../../config/axios\";\r\n\r\nimport { ISLOADING, QUESTIONLIST } from \"../AdminReducers/actions\";\r\n\r\nexport const get_questions = () => dispatch => {\r\n    dispatch({ type: ISLOADING, payload: true });\r\n    axiosInstance.get('/get-questions')\r\n        .then(result => {\r\n            let { status, data } = result.data;\r\n            if (status === 200) {\r\n                dispatch({ type: QUESTIONLIST, payload: data[0].question_list.reverse() });\r\n                dispatch({ type: ISLOADING, payload: false });\r\n            }\r\n            else {\r\n                toast(\"Something went wrong\", { type: \"error\" });\r\n                dispatch({ type: ISLOADING, payload: false });\r\n            }\r\n        })\r\n        .catch(err => {\r\n            toast(err.message || \"Something Went Wrong\", { type: \"error\" });\r\n            dispatch({ type: ISLOADING, payload: false });\r\n        })\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\n\r\nimport { makeStyles, useTheme, fade } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport Users from './pages/dashboard/Users';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n    Switch,\r\n    useRouteMatch,\r\n    useHistory,\r\n    NavLink\r\n} from 'react-router-dom';\r\nimport { routers } from \"./routes\";\r\nimport { Icon } from '@material-ui/core';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        background: '#f3698e'\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    listroot: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        marginTop: \"10px\"\r\n    },\r\n    inline: {\r\n        display: 'inline',\r\n    },\r\n    title: {\r\n        paddingLeft: \"20px\",\r\n        textDecoration: \"none\"\r\n    },\r\n    titleAnchor: {\r\n        textDecoration: \"none\"\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n        fontWeight: 'bold',\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n        marginRight: \"100px\"\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Core = (props) => {\r\n    console.log(props)\r\n    const url = useRouteMatch();\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = (event) => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const logout = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={logout}>Logout</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n\r\n        </Menu>\r\n    );\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n                style={{ background: \"#f3698e\" }}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        LOVEU\r\n          </Typography>\r\n\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <Typography style={{ marginTop: \"12px\" }}>Hi,{props.user_detail.name}</Typography>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <List>\r\n                    {routers.map((text, index) => (\r\n                        <NavLink activeClassName=\"is-active\" to={text.path} style={{ textDecoration: 'none', color: \"white\" }}>\r\n\r\n                            <ListItem button key={text.name}>\r\n                                <Icon style={{ color: \"white\" }}>{text.icon}</Icon>\r\n                                <ListItemText primary={text.name} style={{ paddingLeft: '10px' }} />\r\n                            </ListItem>\r\n\r\n                        </NavLink>\r\n                    ))}\r\n                </List>\r\n\r\n            </Drawer>\r\n            <main\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {/* Import Components */}\r\n                {\r\n                    routers.map(route => <Route exact isAuth='true' path={route.path} component={route.component} />)\r\n                }\r\n\r\n            </main>\r\n        </div >\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return {\r\n        user_detail: state.user.user_detail\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Core);","export const USER_LIST = \"USER_LIST\";\r\nexport const SET_LIST = \"SET_LIST\";\r\nexport const GET_LIST = \"GET_LIST\";\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const IS_SUCCESS = \"IS_SUCCESS\";\r\nexport const USER_DETAIL = \"USER_DETAIL\";\r\nexport const IS_AUTH = \"IS_AUTH\";\r\nexport const UPDATE_QUESTION_LIST = \"UPDATE_QUESTION_LIST\";","import { IS_LOADING, USER_LIST, USER_DETAIL, IS_SUCCESS, IS_AUTH, UPDATE_QUESTION_LIST } from \"./actions\";\r\nconst intial = {\r\n    loading: false,\r\n    user_list: [],\r\n    is_success: false,\r\n    is_auth: false\r\n}\r\n\r\nexport default (state = intial, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST:\r\n            return { ...state, user_list: action.payload };\r\n        case USER_DETAIL:\r\n            return { ...state, user_detail: action.payload };\r\n        case IS_LOADING:\r\n            return { ...state, loading: action.payload };\r\n        case IS_SUCCESS:\r\n            return { ...state, is_success: action.payload };\r\n        case IS_AUTH:\r\n            return { ...state, is_auth: true }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { QUESTIONLIST, ISLOADING } from \"./actions\";\r\nconst intial = {\r\n    is_Loading: false,\r\n    question_list: []\r\n}\r\n\r\nexport default (state = intial, action) => {\r\n    switch (action.type) {\r\n        case QUESTIONLIST:\r\n            return { ...state, question_list: action.payload };\r\n        case ISLOADING:\r\n            return { ...state, is_Loading: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport UserReducer from \"../redux/UserReducers/reducers\";\r\nimport AdminReducer from \"../redux/AdminReducers/reducers\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"\r\nimport thunk from 'redux-thunk';\r\nconst middlewares = [thunk];\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['user']\r\n}\r\n\r\nconst reducers = {\r\n    user: UserReducer,\r\n    admin: AdminReducer\r\n}\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(persistReducer(persistConfig, rootReducer), applyMiddleware(...middlewares));\r\nexport const persistor = persistStore(store);","export default __webpack_public_path__ + \"static/media/logo.3e8db16f.jpeg\";","import axios from \"axios\";\r\nimport { Cookies } from \"react-cookie\";\r\nimport { toast } from \"react-toastify\";\r\nimport { axiosInstance } from \"../../config/axios\";\r\nimport { IS_LOADING, USER_LIST, IS_SUCCESS, USER_DETAIL, IS_AUTH } from \"../UserReducers/actions\";\r\nconst cookie = new Cookies();\r\n\r\nexport const getUsers = () => {\r\n    return dispatch => {\r\n        dispatch({ type: IS_LOADING, payload: true });\r\n\r\n        axiosInstance.get(`getUser`)\r\n            .then(result => {\r\n                let { data } = result;\r\n                if (data.message === true) {\r\n                    dispatch({ type: IS_SUCCESS, payload: true });\r\n                    dispatch({ type: USER_LIST, payload: data.data });\r\n                    dispatch({ type: IS_LOADING, payload: false });\r\n                }\r\n            })\r\n            .catch(error => {\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const userLogin = (payload, history) => {\r\n    console.log(payload)\r\n    return dispatch => {\r\n        axiosInstance.post(`login`, payload)\r\n            .then(result => {\r\n                let { status, data, message } = result.data;\r\n                if (status === 200) {\r\n                    dispatch({ type: USER_DETAIL, payload: data[0] });\r\n                    console.log(data[0].token)\r\n                    localStorage.setItem('token', data[0].token);\r\n                    cookie.set('token', data[0].token)\r\n                    axiosInstance.defaults.headers['authorization'] = `${data[0].token}`;\r\n                    history.push('/dashboard');\r\n                }\r\n                else {\r\n                    toast(message, { type: 'error' });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: IS_LOADING, payload: false });\r\n                toast(\"Invalid Credentials\", { type: 'error' });\r\n            })\r\n    }\r\n}\r\n\r\nexport const userSignup = (payload, history) => {\r\n    return dispatch => {\r\n        payload.gender = \"Male\";\r\n        payload.date_of_birth = \"10/20/1996\";\r\n        payload.your_status = \"test\";\r\n        payload.device_token = \"\";\r\n        payload.device_type = \"\";\r\n        axiosInstance.post(`standard_signup`, payload).then(result => {\r\n            let { data, status } = result.data;\r\n            console.log(data);\r\n            if (status === 200) {\r\n                dispatch({ type: IS_SUCCESS, payload: true });\r\n                dispatch({ type: USER_DETAIL, payload: data[0] });\r\n                dispatch({ type: IS_AUTH, payload: true })\r\n                history.push('/dashboard')\r\n            }\r\n            else {\r\n                dispatch({ type: IS_SUCCESS, payload: false });\r\n            }\r\n\r\n        }).catch(err => {\r\n            dispatch({ type: IS_SUCCESS, payload: false });\r\n        })\r\n    }\r\n\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { userSignup } from \"../redux/UserReducers/actionCreator\"\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { USER_DETAIL } from '../redux/UserReducers/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction Signup(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [signupPayload, setSignupPayload] = useState({ name: \"\", email: \"\", password: \"\", business: \"\" })\r\n    const handleChange = e => setSignupPayload({ ...signupPayload, [e.target.name]: e.target.value });\r\n    const formRef = useRef(null);\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        props.signup(signupPayload, history);\r\n        console.log(props.is_success);\r\n        //props.is_success && history.push('/dashboard');\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                onSubmit={handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n                <TextValidator\r\n                    label=\"Full Name\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    name=\"name\"\r\n                    value={signupPayload.name}\r\n                    validators={['required']}\r\n                    errorMessages={['Name field is required']}\r\n                />\r\n\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={handleChange}\r\n                    name=\"email\"\r\n                    value={signupPayload.email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['Email field is required', 'email is not valid']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Password\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"password\"\r\n                    value={signupPayload.password}\r\n                    validators={['required']}\r\n                    errorMessages={['Password field is required']}\r\n                />\r\n                <TextValidator\r\n                    label=\"Business Name\"\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    name=\"business\"\r\n                    value={signupPayload.business}\r\n                    validators={['required']}\r\n                    errorMessages={['Business field is required']}\r\n                />\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Checkbox name=\"checkedA\" />}\r\n                        label=\"I agree the terms & conditions\"\r\n                    />\r\n                </FormGroup>\r\n                <Grid justify=\"center\" alignItems=\"center\" container justify=\"space-evenly\" style={{ marginTop: \"20px\" }}>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Sign Up</Button>\r\n                    <Button type=\"button\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.handler('login')}> Cancel</Button>\r\n\r\n                </Grid>\r\n            </ValidatorForm>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        is_success: state.is_success\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup: (payload, redirect) => dispatch(userSignup(payload, redirect))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction ForgetPassword(props) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = useState(\"\")\r\n\r\n    const formRef = useRef(null);\r\n    const handleSubmit = () => {\r\n    };\r\n    return (\r\n        <Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                onSubmit={handleSubmit}\r\n                onError={errors => console.log(errors)}\r\n            >\r\n\r\n                <TextValidator\r\n                    label=\"Email\"\r\n                    fullWidth\r\n                    className={classes.input}\r\n                    variant=\"outlined\"\r\n                    onChange={e => setEmail(e.target.value)}\r\n                    name=\"email\"\r\n                    value={email}\r\n                    validators={['required', 'isEmail']}\r\n                    errorMessages={['Email field is required', 'email is not valid']}\r\n                />\r\n\r\n\r\n                <Grid  alignItems=\"center\" container justify=\"space-evenly\" style={{ marginTop: \"20px\" }}>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Request</Button>\r\n                    <Button type=\"button\" color=\"primary\" size=\"large\" variant=\"contained\" onClick={() => props.handler('login')}>Cancel</Button>\r\n\r\n                </Grid>\r\n            </ValidatorForm>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ForgetPassword;","import React, { useEffect, useRef, useState } from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Logo from \"../logo.jpeg\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport Signup from \"./Signup\"\r\nimport ForgetPassword from './ForgetPassword';\r\nimport { userLogin } from '../redux/UserReducers/actionCreator';\r\nimport { connect } from 'react-redux';\r\nimport { SaveIcon } from '@material-ui/icons/Save';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        justify: \"center\",\r\n        padding: theme.spacing(2),\r\n        position: \"relative\"\r\n    },\r\n    rootContainer: {\r\n        position: 'absolute',\r\n        left: '0',\r\n        right: '0',\r\n        top: '0',\r\n        bottom: 0,\r\n        margin: 'auto',\r\n        width: '500px'\r\n\r\n    },\r\n    input: {\r\n        marginBottom: 16,\r\n        backgroundColor: '#fcfcfb',\r\n    }\r\n}));\r\n\r\nfunction Login(props) {\r\n    const history = useHistory()\r\n    const classes = useStyles();\r\n    const [loginPayload, setLoginPayload] = useState({ email: \"\", password: \"\" });\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const [type, setType] = useState(\"login\");\r\n    const handleChange = e => setLoginPayload({ ...loginPayload, [e.target.name]: e.target.value });\r\n    const formRef = useRef(null);\r\n\r\n    useEffect(() => { }, [isLogin])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setIsLogin(false);\r\n        props.user_login(loginPayload, history);\r\n\r\n    };\r\n\r\n    const handler = value => setType(value);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2} className={classes.rootContainer}>\r\n                <Grid justify=\"center\" alignItems=\"center\" direction=\"column\" container>\r\n                    <img src={Logo} width=\"300px\" style={{ marginBottom: \"10px\", marginTop: \"20px\" }} />\r\n                    <Typography variant=\"h6\" >\r\n                        Sign In To Admin\r\n                    </Typography>\r\n                    <Typography>\r\n                        Enter your details to login to your account:\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                {type === 'login' ? (<Grid item xs={12} style={{ marginTop: \"40px\" }}>\r\n                    <ValidatorForm\r\n                        ref={formRef}\r\n                        onSubmit={handleSubmit}\r\n                        onError={errors => console.log(errors)}\r\n                    >\r\n                        <TextValidator\r\n                            label=\"Email\"\r\n                            fullWidth\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            name=\"email\"\r\n                            value={loginPayload.email}\r\n                            validators={['required', 'isEmail']}\r\n                            errorMessages={['Email field is required', 'email is not valid']}\r\n                        />\r\n                        <TextValidator\r\n                            label=\"Password\"\r\n                            className={classes.input}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={handleChange}\r\n                            name=\"password\"\r\n                            value={loginPayload.password}\r\n                            validators={['required']}\r\n                            errorMessages={['Password field is required']}\r\n                            type=\"password\"\r\n                        />\r\n\r\n\r\n                        <Grid alignItems=\"center\" container justify=\"center\">\r\n                            <Button type=\"submit\" color=\"primary\" size=\"large\" variant=\"contained\">Sign in</Button>\r\n                        </Grid>\r\n\r\n                    </ValidatorForm>\r\n\r\n                </Grid>\r\n                ) : type === 'forget' ? (<ForgetPassword handler={handler} />) : (<Signup handler={handler} />)}\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.loading,\r\n        isSuccess: state.is_success\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        user_login: (payload, redirect) => dispatch(userLogin(payload, redirect))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction ProtectedRoutes({ isAuth: isAuth, component: Component, ...rest }) {\r\n    return (    \r\n        <Route {...rest} render={(props) => {\r\n            if (isAuth) { return <Component /> }\r\n            else { return <Redirect to={{ pathname: \"/\", state: { from: props.location } }} /> }\r\n        }} />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoutes;","import './App.css';\nimport { Provider } from \"react-redux\";\nimport Core from './Core';\nimport { store, persistor } from './redux/redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\nimport Login from './pages/Login';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Users from './pages/dashboard/Users';\nimport ProtectedRoutes from './ProtectedRoute';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n\n      <ToastContainer />\n      <PersistGate persistor={persistor}>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Login}></Route>\n            <ProtectedRoutes path='/dashboard' component={Core} isAuth={true} />\n          </Switch>\n        </Router>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}